@model UMT88.ViewModels.MatchDetailVm
@{
    Layout = "_UserLayout";        // Hoặc tên layout bạn dùng cho user
    ViewData["Title"] = "Cá cược";
}

<main class="max-w-4xl mx-auto p-6">
    <div class="bg-white border border-gray-300 rounded-lg shadow-md p-6">

        <h2 class="text-2xl font-bold mb-4 flex items-center justify-center gap-2">
            <span>@Model.home_name</span>
            <span class="text-gray-500 font-normal">vs</span>
            <span>@Model.away_name</span>
            <span class="text-gray-400 text-sm font-normal ml-3">(@Model.start_time)</span>
        </h2>

        @if (!Model.markets.Any())
        {
            <p class="italic text-gray-500">Kèo đang được cập nhật…</p>
        }
        else
        {
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-6">
                @foreach (var mk in Model.markets)
                {
                    <div class="bg-gray-50 rounded-lg p-5 border border-gray-200 shadow-sm">
                        <a href="#" class="text-blue-600 text-xl font-semibold hover:text-blue-500 transition">
                            @mk.market_type
                        </a>
                        <div class="flex justify-between text-gray-600 font-semibold mt-4 mb-3 border-b border-gray-300 pb-1">
                            <span>Cửa</span>
                            <span>Odds</span>
                        </div>

                        @foreach (var (sel, odds) in mk.items)
                        {
                            <button type="button"
                                    class="w-full flex justify-between py-3 border-b border-gray-300 hover:bg-blue-50 rounded cursor-pointer transition"
                                 data-sel="@sel.selection_id"
                                 data-name="@sel.name"
                                 data-odds="@odds.odds_value">
                                <span>@sel.name</span>
                                <span class="font-semibold text-yellow-600">@odds.odds_value</span>
                            </button>
                        }
                    </div>
                }
            </div>
        }
    </div>
</main>

<!-- Toast container -->
<div id="toast" class="fixed top-5 right-5 bg-green-500 text-white px-4 py-2 rounded shadow-lg
                     opacity-0 pointer-events-none transition-opacity duration-300 z-50">
    <span id="toastMessage"></span>
</div>

<!-- Modal Bet Slip -->
<div id="betModal" class="fixed inset-0 bg-black/50 hidden items-center justify-center z-40">
    <div class="bg-white rounded-lg w-full max-w-sm p-6 space-y-4">
        <h3 class="font-semibold text-lg" id="betTitle"></h3>
        <div class="text-sm">
            Odds: <span id="betOdds" class="font-semibold"></span><br />
            Số dư: <span id="userBalance" class="font-semibold"></span> xu
        </div>
        <div>
            <label class="block text-xs font-semibold mb-1">Số tiền cược</label>
            <input id="stakeInput" type="number" min="1"
                   class="w-full border rounded px-3 py-2 text-sm"
                   placeholder="Nhập số xu" />
            <p id="payoutHint" class="text-xs text-gray-500 mt-1"></p>
            <p id="balanceWarn" class="text-xs text-red-600 mt-1 hidden">Không đủ số dư.</p>
        </div>
        <div class="flex justify-end space-x-2">
            <button id="cancelBtn" class="px-3 py-1 text-xs bg-gray-200 rounded">Hủy</button>
            <form id="betForm" method="post" asp-action="PlaceBet" asp-controller="Bet">
                <input type="hidden" name="selectionId" id="selHidden" />
                <input type="hidden" name="stake" id="stakeHidden" />
                <button id="confirmBtn" type="submit"
                        class="px-4 py-1 text-xs bg-blue-600 text-white rounded disabled:opacity-40">
                    Xác nhận
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toast helper
        function showToast(msg) {
            const t = document.getElementById('toast');
            document.getElementById('toastMessage').textContent = msg;
            t.classList.remove('opacity-0','pointer-events-none');
            t.classList.add('opacity-100');
            setTimeout(() => {
                t.classList.remove('opacity-100');
                t.classList.add('opacity-0','pointer-events-none');
            }, 3000);
        }

        // Modal Bet Slip
        const modal   = document.getElementById('betModal');
        const titleEl = document.getElementById('betTitle');
        const oddsEl  = document.getElementById('betOdds');
        const balSpan = document.getElementById('userBalance');
        let   currentOdds = 0,
              balance     = parseFloat('@ViewBag.Balance');

        balSpan.textContent = balance.toLocaleString();

        document.querySelectorAll('button[data-sel]').forEach(btn => {
            btn.addEventListener('click', () => {
                modal.classList.remove('hidden');
                modal.classList.add('flex');
                const selId = btn.dataset.sel;
                titleEl.textContent = btn.dataset.name;
                currentOdds = parseFloat(btn.dataset.odds);
                oddsEl.textContent  = currentOdds;
                document.getElementById('selHidden').value = selId;
                document.getElementById('stakeInput').value = '';
                updateStake();
            });
        });

        document.getElementById('cancelBtn').onclick = () => {
            modal.classList.add('hidden');
        };

        document.getElementById('stakeInput').addEventListener('input', updateStake);
        function updateStake(){
            const stake = parseFloat(document.getElementById('stakeInput').value || 0);
            document.getElementById('payoutHint').textContent =
                stake ? `Thắng tiềm năng: ${(stake*currentOdds).toLocaleString()} xu` : '';
            const enough = stake > 0 && stake <= balance;
            document.getElementById('balanceWarn').classList.toggle('hidden', enough);
            document.getElementById('confirmBtn').disabled = !enough;
            document.getElementById('stakeHidden').value  = stake;
        }

        // Khi load nếu TempData["Toast"] có giá trị
         document.addEventListener('DOMContentLoaded', () => {
        @if (TempData["Toast"] != null)
        {
            <text>showToast(@Html.Raw(Json.Serialize(TempData["Toast"])));</text>
        }
        @if (TempData["Balance"] != null)
        {
            <text>
                        balance = parseFloat("@TempData["Balance"]");
                        balSpan.textContent = balance.toLocaleString();
            </text>
        }
        });

    </script>
}
