@model UMT88.ViewModels.DepositFormVm
@{
    Layout = "_UserLayout";
    ViewData["Title"] = "Nạp tiền";
}

<main class="max-w-5xl mx-auto flex flex-col md:flex-row gap-10 p-6">

    <!-- ==== FORM ==== -->
    <section class="md:w-1/2 space-y-6">
        @if (TempData["Toast"] != null)
        {
            <div class="bg-green-100 text-green-800 text-sm p-3 rounded">@TempData["Toast"]</div>
        }

        <h2 class="font-semibold text-base">Nạp tiền</h2>
        <p class="text-gray-500 text-sm mb-6">Chọn số tiền muốn nạp và ngân hàng.</p>

        <form asp-action="Index" method="post" class="space-y-4">
            @Html.AntiForgeryToken()

            <div>
                <label class="block text-xs mb-1">Số tiền (VNĐ)</label>
                <input id="amountVnd" name="amountVnd" type="number" min="10000" step="1000"
                       class="w-full rounded bg-gray-100 px-3 py-2 text-xs" required />
            </div>

            <div>
                <label class="block text-xs mb-1">Ngân hàng</label>
                <select name="bank" class="w-full rounded bg-gray-100 px-3 py-2 text-xs" required>
                    <option disabled selected>Chọn ngân hàng</option>
                    @foreach (var b in Model.Banks){ <option>@b</option> }
                </select>
            </div>

            <div>
                <span class="text-xs font-semibold">Bạn sẽ nhận:</span>
                <span id="xuPreview" class="font-bold">0 xu</span>
            </div>

            <button class="bg-blue-600 text-white text-xs font-semibold rounded px-4 py-2">Tiếp tục</button>
        </form>
    </section>

    <!-- ==== HISTORY + INFO ==== -->
    <section class="md:w-1/2 flex flex-col gap-6">

        <div class="border p-4 rounded max-h-[300px] overflow-y-auto text-xs">
            <h3 class="font-semibold text-sm mb-3">Lịch sử nạp/rút</h3>
            <ul class="space-y-3">
                @foreach (var h in Model.History)
                {
                    <li class="flex justify-between">
                        <span>@h.Date.ToString("dd/MM/yyyy HH:mm")</span>
                        <span class="@h.Color font-semibold">
                            @h.Sign @h.AmountVnd.ToString("N0") VND @h.Label
                        </span>
                    </li>
                }
            </ul>
        </div>

        <div class="border p-4 rounded text-xs">
            <h4 class="font-semibold mb-2">Quy đổi xu UMT</h4>
            <p>Mỗi <b>10 000 VNĐ = 1 xu</b>. Sau khi thanh toán, xu tự cộng vào tài khoản.</p>
        </div>
    </section>
</main>

<!-- ========= QR MODAL ========= -->
@if (Model.PendingDepositId != null)
{
<div id="qrModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg text-center space-y-4 w-full max-w-xs">
        <h3 class="font-semibold text-sm">Quét QR để thanh toán</h3>
        <img src="~/images/mock-qr.png" alt="QR code" class="w-48 h-48 mx-auto border" />
        <div class="text-xs">Thời gian còn lại: <span id="cd">15:00</span></div>
        <button id="qrClose" class="mt-2 text-xs underline text-blue-600">Hủy</button>
    </div>
</div>
}
<!-- ====== Thành công Modal ====== -->
<div id="successModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-lg p-6 w-full max-w-xs text-center">
        <h3 class="text-lg font-semibold text-green-600 mb-3">Thành công!</h3>
        <p class="mb-4 text-gray-700 text-sm">Bạn đã nạp tiền thành công!</p>
        <button id="successOk" class="bg-blue-600 text-white rounded px-4 py-2 text-xs font-semibold">OK</button>
    </div>
</div>
}

@section Scripts {
    <script>
        /* ======= preview xu ======= */
        const rate = 10000;
        const vnd  = document.getElementById('amountVnd');
        const xp   = document.getElementById('xuPreview');
        if (vnd){
            vnd.addEventListener('input', () =>{
                const xu = ((parseFloat(vnd.value)||0) / rate).toLocaleString();
                xp.textContent = xu + ' xu';
            });
        }
    </script>

    @*--- Chỉ nhúng JS khi có giao dịch chờ duyệt *@
    @if (Model.PendingDepositId != null)
    {
        <script>
            // QR modal & auto-confirm mock
            let sec   = 900;   // 15 phút
            const cd  = document.getElementById('cd');
            const id  = @Model.PendingDepositId;

            // Countdown hiển thị
            const timer = setInterval(()=>{
                const m = String(Math.floor(sec/60)).padStart(2,'0'),
                      s = String(sec%60).padStart(2,'0');
                cd.textContent = `${m}:${s}`;
                if(sec--<=0) clearInterval(timer);
            },1000);

            // Sau 10s gọi API xác nhận + show modal thành công
            setTimeout(()=>{
                fetch('/Deposit/Confirm',{
                    method:'POST',
                    headers:{'Content-Type':'application/json'},
                    body: JSON.stringify({ depositId: id })
                }).then(()=>{
                    document.getElementById('qrModal').classList.add('hidden');
                    document.getElementById('successModal').classList.remove('hidden');
                });
            },10000);

            // Nút Hủy: reload lại trang (trả về trạng thái bình thường)
            document.getElementById('qrClose').onclick = () => location.reload();

            // Nút OK của modal thành công: reload lại trang
            document.getElementById('successOk').onclick = () => location.reload();
        </script>
    }
}